<?xml version="1.0"?>

<!-- Test ros_control integration of REEM-C on a dummy implementation of the ActuatorsManager.
     This test does not use the actual ActuatorsManager, but a minimal implenentation of its interface.
 -->

<launch>
  <!-- set the python path -->
  <env name="PYTHONPATH" value="$(env PYTHONPATH):$(find sot_controller)/python_code" />

  <!-- Activate the self collision check -->
  <!-- Note: The controller is using the collision check for default -->
  <arg name="collision_check" default="true" />
  <param name="sot_controller/collision_check" type="bool" value="false"/>
	<group if="$(arg collision_check)">
		<param name="sot_controller/collision_check" type="bool" value="true"/>
	</group>

  <!-- Deployer -->
  <arg name="orocos_target" value="$(optenv OROCOS_TARGET gnulinux)" />
  <node name="rt_control"
        pkg="ocl"
        type="deployer-$(arg orocos_target)"
        args="-s $(find reemc_hardware_tests)/config/dummy_act_mgr_test.ops --no-consolelog --"/>

	<!-- Create the floor frame -->
  <include file="$(find sot_controller)/launch/floor_frame_publisher.launch"/>

  <!-- Robot descriptions for sot -->
  <include file="$(find sot_controller)/launch/reemc_descriptions_sot.launch" />

  <!-- Load the configuration file of sot controller -->
  <rosparam command="load" file="$(find sot_controller)/config/sot_controller.yaml" />
  
  <!-- Joint state controller -->
  <rosparam command="load" file="$(find joint_state_controller)/joint_state_controller.yaml" />

  <!-- Spawn controllers -->
  <node name="controllers_spawner"
        pkg="controller_manager" type="spawner" output="screen"
        args="joint_state_controller
              sot_controller" />

  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" type="string" value="" />
  </node>
  
</launch>
